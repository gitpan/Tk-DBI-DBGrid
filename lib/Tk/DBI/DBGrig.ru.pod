=head1 NAME

Tk::DBI::DBGrid - grid для просмотра и редактирования базы.

=head1 SYNOPSIS

 use DBI;
 use Tk;
 use Tk::DBI::DBGrid;


 my $dbh = DBI->connect( $dbhstr, $name, $pas, {AutoCommit => 0, RaiseError => 0}) or die DBI::errstr;

 my $w = $MW->Toplevel(-title => 'dbgrid');

 .....
 
 my $sql = "SELECT field0, field1, field2 FROM table0";

 # только просмот

 my $grid = $w->DBGrid( -dbh => $dbh, -sql => $sql )->pack;



 # с использованием редактирования, без встаки и удаления

 my @pkey = ('field0');

 my $upd = sub {
     my @row = @_;
     ..... # какой-нибудь код до update, если нужно
     $dbh->do("UPDATE table0 SET  WHERE field0 = $row[0]");
     $dbh->commit;
     ..... # какой-нибудь код после update, если нужно
     0;    # ноль нужен для будущих реализаций
 };

 my $grid = $w->DBGrid( -dbh => $dbh, -sql => $sql, -maxrow => 10, -edit => 1, -pkey => \@pkey, -updfunc => $upd, -font => 'Courier 10' )->pack;



 # with insert, delete and formating sells

 my @pkey = ('field0');

 my @cell;
 $cell[0]{width} = 5;
 $cell[0]{edit} = 0;        # primary key должен быть только для чтения
 $cell[1]{width} = undef;   # считывается длина поля из таблицы
 $cell[1]{edit} = 1;
 $cell[2]{width} = 7;
 $cell[2]{edit} = 1;
 $cell[2]{justify} = 'left';


 my $ins = sub {
     my @row = @_;
     ......
     $dbh->do("INSERT INTO table0 (field0, field1, field2) VALUES ($row[0], $row[1], $row[2])");
     $dbh->commit;
     ......
     0;
 };

 my $upd = sub {
     my @row = @_;
     ..... 
     $dbh->do("UPDATE table0 SET  WHERE field0 = $row[0]");
     $dbh->commit;
     ..... 
     0;
 };

 my $del = sub {
     my ($pkey) = @_;
     .....
     $dbh->do("DELETE FROM table0 WHERE field0 = $pkey");
     $dbh->commit;
     .....
     0;
 };

 my %fkey;
 $fkey{ins} = 'Key-F5';
 $fkey{del} = 'Key-F8';

 my $grid = $w->DBGrid( -dbh => $dbh, -sql => $sql, -maxrow => 10, -edit => 1, -pkey => \@pkey, -insfunc => $ins, -updfunc => $upd, -delfunc => $del, -font => 'Courier 10', -cellformat =>\@cell, -fkeys => \%fkey )->pack(-fill => 'x');

=head1 DESCRIPTION

B<DBGrid> позволяет просматривать/редактировать любую таблицу, к которой
можно обратиться используя запрос. Запрос может объединять несколько таблиц.

=head2 Edit table

Для редактирования надо что бы каждую запись можно было однозначно определить
каким-либо полем, которое будет выполнять функцию primary key.
Для передачи изменения в базу используются функции, указатели на которые
передаются в конструкторе ( -insfunc, -updfunc & -delfunc ). 
Сами функции описываются в основном тексте программы. 
Если указатель не передается или передается undef, то соответствующее 
действие не обрабатывается.
Если в запросе будут найдены ключевые слова групповых операций или UNION,
то B<DBGrid> будет в режиме просмотра ( аналогично -edit => 0 ).
На данный момент после вызовов функций отображаемые данные не обновляются.

=head2 Formating cells

Параметры отображения каждого поля определяются параметрами самой таблицы
(считываются длина поля и тип - текстовый, цисловой и остальные). Для поля, 
определенного через -pkey, редактирование не доступно.
Все ячейки B<DBGrid> - элементы управления Label или Entry, и после отображения
ими можно управлять отдельно, 
например I<$grig-E<gt>{rowframee}-E<gt>[$i][$j]-E<gt>configure( -font =E<gt> 'Courier 12')>.

=head1 OPTIONS

=over 4

=item B<-dbh>

дескриптор соединения с базой данный. Обязательный параметр.

=item B<-sql>

Запрос, результат которого отображает B<DBGrig>.
Результаты запроса заносятся в массив I<$grid-E<gt>{table}-E<gt>{data}-E<gt>[номер_записи][номер_поля]>.
Нумерация идет с нуля.
Обязательный параметр.

=item B<-maxrow>

Максимальное количество записей, отображаемое на экране. Default 10.

=item B<-edit>

Указывает в каком режиме отображается B<DBGrig> : только просмотр ( 0 ) 
или редактирования ( 1 ). Default 0.

=item B<-pkey>

Для режима редактирования должно быть указано ключевое поле (primary key)
и считывается оно из первого элемента массива, на который передается 
указатель. Если B<-pkey> не определнено или не найдено в запросе, то edit = 0.

=item B<-incfunc>

Указатель на функцию, которая вызывается для вставки новой строки.
В функцию передается массив, содержащий запись для вставки в таблицу.
Порядок полей в записи такой же, как в запросе, полученном 
через B<-sql>. Если функция не определена, новая запись добавлятся не будет.
Default undef.

=item B<-updfunc>

Работает аналогично B<-insfunc>, но с одним отличием: при значении undef
все равно позволяет изменять значения в ячейках, но эти изменения в базу 
не передаются. Default undef.

=item B<-delfunc>

Работает аналогично B<-insfunc>.

=item B<-font>

Шрифт, используемый в ячейках. Т.к. ширина элементов B<Entry> и B<Label> задается
в символах, то для шрифт должен быть monospaced, например Courier.
Default 'Courier 9'

=item B<-cellformat>

указатель на массив, первый элемент которого указывает на номер поля (нумерация
с нуля), второй - параметр форматирования поля. I<width> - ширина поля в символах,
I<edit> - доступно ли редактирование данного поля при разрешении редактировании
всей таблицы, I<justify> - центрирование надписи (I<left>, I<center>, I<right>).

=item B<-fkeys>

Указатель на хэш, в котором будут храниться новые комбаниции клавиш для вставки
и удаления записей: в поле I<ins>  - вставка новой записи, I<del> - удаление 
текущей. Если знечение B<-fkeys> не определено, то для вставки начзачается F5, 
для удаления F8.

=back

=head1 AUTHORS

B<vadim-lvv@yandex.ru>

=head1 KEYWORDS

grid, entry, label, database, table




